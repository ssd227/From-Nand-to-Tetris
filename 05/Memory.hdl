// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Memory.hdl
/** 
 * The Memory chip implements the complete address space of the Hack data memory,
 * including RAM, memory mapped screen, and memory mapped keyboard.
 * Outputs the value of the memory location specified by the address input.
 * If (load == 1), sets the memory location specified by the address input
 * to the value of the in input.
 * Address space rules:
 * Only the upper 16K + 8K + 1 words of the memory are used.
 * Access to address 0 to 16383 (0x0000 to 0x3FFF) results in accessing the RAM;
 * Access to address 16384 to 24575 (0x4000 to 0x5FFF) results in accessing the Screen memory map;
 * Access to address 24576 (0x6000) results in accessing the Keyboard memory map.
 */ 
CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
    //// Replace this comment with your code.
    
    // Ram16k
    DMux(in=load, sel=address[14], a=load150, b=load151);
    RAM16K(in=in, load=load150, address=address[0..13], out=outram16);
    
    // Ram8k(Screen)
    DMux(in=load, sel=address[13], a=load140, b=load141);
    And(a=load151, b=load140, out=loadscreen);
    Screen(in=in, load=loadscreen ,address=address[0..12], out=outscreen);
    
    // Keyboard(Register)
    Keyboard(out=outkeyboard);

    // output 假设无地址溢出问题，此处溢出会导致out=outkeyboard
    Mux4Way16(a=outram16, b=outram16, c=outscreen, d=outkeyboard, sel=address[13..14], out=out);

}
