<tokens>
<keyword> class </keyword>
<identifier> Point </identifier>
<symbol> { </symbol>
<keyword> field </keyword>
<keyword> int </keyword>
<identifier> x </identifier>
<symbol> , </symbol>
<identifier> y </identifier>
<symbol> ; </symbol>
<keyword> static </keyword>
<keyword> int </keyword>
<identifier> pointCount </identifier>
<symbol> ; </symbol>
<keyword> method </keyword>
<keyword> int </keyword>
<identifier> distance </identifier>
<symbol> ( </symbol>
<identifier> Point </identifier>
<identifier> other </identifier>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> var </keyword>
<keyword> int </keyword>
<identifier> dx </identifier>
<symbol> , </symbol>
<identifier> dy </identifier>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> dx </identifier>
<symbol> = </symbol>
<identifier> x </identifier>
<symbol> - </symbol>
<identifier> other </identifier>
<symbol> . </symbol>
<identifier> getx </identifier>
<symbol> ( </symbol>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> dy </identifier>
<symbol> = </symbol>
<identifier> y </identifier>
<symbol> - </symbol>
<identifier> other </identifier>
<symbol> . </symbol>
<identifier> gety </identifier>
<symbol> ( </symbol>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> return </keyword>
<identifier> Math </identifier>
<symbol> . </symbol>
<identifier> sqrt </identifier>
<symbol> ( </symbol>
<symbol> ( </symbol>
<identifier> dx </identifier>
<symbol> * </symbol>
<identifier> dx </identifier>
<symbol> ) </symbol>
<symbol> + </symbol>
<symbol> ( </symbol>
<identifier> dy </identifier>
<symbol> * </symbol>
<identifier> dy </identifier>
<symbol> ) </symbol>
<symbol> ) </symbol>
<symbol> ; </symbol>
<symbol> } </symbol>
<symbol> } </symbol>
</tokens>
